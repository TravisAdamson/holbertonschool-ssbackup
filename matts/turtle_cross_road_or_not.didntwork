#include "shell.h"

/**
 * turtle_cross_road_or_not - launches input command with its arguments
 * @input: The command to be executed.
 * @argv: The arguments to the command.
 * Return: void
 */

void turtle_cross_road_or_not(char *input, char **argv)
{
    pid_t launch = 0;
    int status = 0;

    launch = fork();
    if (launch == -1)
    {
        perror(argv[0]);
        exit(EXIT_FAILURE);
    }
    else if (launch == 0)
    {
        /* Check if PATH is empty */
        char *path_env = getenv("PATH");
        if (path_env && *path_env)
        {
            /* If PATH is not empty, use execvp directly */
            if (execvp(argv[0], argv) == -1)
            {
                perror(argv[0]);
                free(input);
                exit(EXIT_FAILURE);
            }
        }
        else
        {
            /* If PATH is empty, try to execute the command with an explicit path */
            char cwd[MAX_LEN];
            if (getcwd(cwd, sizeof(cwd)) != NULL)
            {
                /* Construct the command_path */
                char command_path[MAX_LEN];
                strcpy(command_path, cwd);
                strcat(command_path, "/");
                strcat(command_path, argv[0]);

                /* Execute the command */
                if (execvp(command_path, argv) == -1)
                {
                    perror(argv[0]);
                    free(input);
                    exit(EXIT_FAILURE);
                }
            }
            else
            {
                perror("getcwd");
                free(input);
                exit(EXIT_FAILURE);
            }
        }
    }
    else
    {
        wait(&status);
    }
}

